<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="FB_StorageHoming" Id="{2fd153e5-22dc-4c42-85d5-45cd7ba299f3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_StorageHoming EXTENDS FB_ActionBasic
VAR_INPUT
	xExecute : BOOL;
	xAbort : BOOL;
    Cylinder   : REFERENCE TO UNI_CylinderList;
    Motor      : REFERENCE TO UNI_MotorList;
    FanucRobot : REFERENCE TO FB_FanucRobot_Basic;
	Homed : REFERENCE TO BOOL;
END_VAR
VAR_OUTPUT
	xAborted : BOOL;
	iErrorID : INT;
	ErrorMsg : STRING;
	RobotResetCMD : BOOL;
	RackMotorHomeRequest : BOOL;
END_VAR
VAR
	StateBehaviour : CBML.ETrigA;
	uiStorageHomingStep : UINT;
	CylinderCheckTon : TON;
	MotorCheckTon : TON;
	FanucRobotCheckTon : TON;
	ResetRobotDelay	 	: TON ;
	fbExecuteEdgeDetect :FB_EdgeDetect;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[THIS^.IBehaviourModel := StateBehaviour;
StateBehaviour(xExecute := xExecute,
    xDone => xDone,
    xBusy => xBusy,
    xError => xError,
    xAbort := xAbort OR fbExecuteEdgeDetect.xFallingEdge,
    xAborted => xAborted);

//Error Msg
iErrorID := StateBehaviour._model.iErrorID;
ErrorMsg := M_GetErrorMsg(xErrorID := iErrorID);

//Make sure that C# turns off execute to shut down the service
fbExecuteEdgeDetect(xInput :=xExecute);


CylinderCheckTon(PT := T#5S);
MotorCheckTon(PT := T#2S);
FanucRobotCheckTon(PT:=T#60S);
ResetRobotDelay(PT:=T#300ms);]]></ST>
    </Implementation>
    <Folder Name="Action" Id="{881f8635-f46a-4ddb-97b4-864b67976b4f}" />
    <Folder Name="Private" Id="{1c5d76ea-2b76-4b56-948b-0fc762a69420}" />
    <Method Name="CleanupAction" Id="{c5ed61e2-bef2-4ed3-839e-161137710cad}" FolderPath="Action\">
      <Declaration><![CDATA[METHOD CleanupAction
VAR_INPUT
    xAbortProposed : BOOL;
    iErrorIDProposed: INT;
END_VAR
VAR_OUTPUT
    xComplete : BOOL := TRUE;
    xAbort: BOOL := xAbortProposed;
 	iErrorID : INT := iErrorIDProposed;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="CyclicAction" Id="{cb28e4a6-cc99-4b81-bdfb-57b074977c81}" FolderPath="Action\">
      <Declaration><![CDATA[METHOD CyclicAction
VAR_INPUT
    itfTimingController : CBML.ITimingController;
END_VAR
VAR_OUTPUT
    xComplete : BOOL := TRUE;
    iErrorID : INT := 0;
END_VAR
VAR
	tehn: INT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[xComplete := FALSE;
CASE uiStorageHomingStep OF
	0: // Retract Cylinder
		M_RetractStorageCylinder();
		RobotResetCMD := FALSE;	
		Cylinder.List.fbStackPush.M_Retract();
		IF Cylinder.List.fbStackPush.InRearPosition THEN		// safecheck Rackmotor home 
		uiStorageHomingStep := 100;
		END_IF
	100:
		IF M_CheckStorageCylinderInRear() THEN
			uiStorageHomingStep := 200;
		ELSE
			CylinderCheckTon.IN := TRUE;
			IF CylinderCheckTon.Q THEN
				iErrorID := 2;
			END_IF
		END_IF
	200:
			CylinderCheckTon.IN := FALSE;
			M_StopStorageMotor ();
			uiStorageHomingStep := 300;
	300:
		IF M_CheckStorageMotorInStop() THEN
			uiStorageHomingStep := 400;
		ELSE
			MotorCheckTon.IN := TRUE;
			IF MotorCheckTon.Q THEN
				iErrorID := 3;
			END_IF
		END_IF
	400:
		MotorCheckTon.IN := FALSE;
		FanucRobotCheckTon.IN := TRUE;
		IF FanucRobot.Error THEN
			RobotResetCMD := TRUE;		
			ResetRobotDelay.IN:=TRUE;
		ELSE
			uiStorageHomingStep := 500;
		END_IF
		IF ResetRobotDelay.Q THEN
			ResetRobotDelay.IN:=FALSE;
			uiStorageHomingStep := 500;
		END_IF	
		
		
	500:
		RobotResetCMD := FALSE;	
		RackMotorHomeRequest := TRUE;		// RackMotor homing edit min
		FanucRobot.OpMode := E_FanucRobotOpMode.RSR02;
		IF FanucRobot.Error THEN
			RobotResetCMD := TRUE;		
		END_IF
		IF FanucRobot._RSR2_Completed THEN
			uiStorageHomingStep := 600;
		END_IF
	600:
		FanucRobot.OpMode := E_FanucRobotOpMode.RSR01;
		IF FanucRobot._RSR1_Ready THEN
			uiStorageHomingStep := 700;
		END_IF
	700:
		FanucRobotCheckTon.IN := FALSE;
		Homed := TRUE;
		xComplete := TRUE;
END_CASE

IF FanucRobotCheckTon.Q THEN
	iErrorID := 4;
END_IF


]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExitAction" Id="{e02f0eeb-1cd6-40e0-8299-784fd4255d0b}" FolderPath="Action\">
      <Declaration><![CDATA[METHOD ExitAction
VAR_INPUT
    xAfterCleanup : BOOL;
    xInCopyCode : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[uiStorageHomingStep := 0;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_CheckStorageCylinderInRear" Id="{040429f0-b707-4328-ab03-bf2984f81f8e}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD M_CheckStorageCylinderInRear : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_CheckStorageCylinderInRear := Cylinder.List.fbUpCV_FeedInPress1.InRearPosition AND
    Cylinder.List.fbUpCV_FeedInPress2.InRearPosition AND
    Cylinder.List.fbUpCV_DiameterPress.InRearPosition AND
    Cylinder.List.fbUpCV_CamaraPress1.InRearPosition AND
    Cylinder.List.fbUpCV_CamaraPress2.InRearPosition AND
    Cylinder.List.fbUpCV_CamaraPress3.InRearPosition AND
    Cylinder.List.fbUpCV_CamaraPress4.InRearPosition AND
    Cylinder.List.fbUpCV_Block1.InRearPosition AND
    Cylinder.List.fbUpCV_Block2.InRearPosition AND
    Cylinder.List.fbUpCV_Block3.InRearPosition AND
    Cylinder.List.fbUpCV_DiameterHoriz.InRearPosition AND
    Cylinder.List.fbUpCV_DiameterVert.InRearPosition AND
    Cylinder.List.fbUpCV_DiameterClamp.InRearPosition AND
    Cylinder.List.fbStackPush.InRearPosition AND
    Cylinder.List.fbLowCV_Press1.InRearPosition AND
    Cylinder.List.fbLowCV_Press2.InRearPosition AND
    Cylinder.List.fbLowCV_Press3.InRearPosition AND
    Cylinder.List.fbLowCV_Press4.InRearPosition AND
    Cylinder.List.fbLowCV_Block1.InRearPosition AND
    Cylinder.List.fbLowCV_Block2.InRearPosition;
]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_CheckStorageMotorInStop" Id="{bf85787a-087d-4ce2-8347-9f6e943d0a99}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD M_CheckStorageMotorInStop : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[M_CheckStorageMotorInStop := Motor.List.LowCV.InStopped AND
    Motor.List.UpCV.InStopped AND
    Motor.List.WareHouseCV_01.InStopped AND
    Motor.List.WareHouseCV_02.InStopped AND
    Motor.List.WareHouseCV_03.InStopped AND
    Motor.List.WareHouseCV_04.InStopped AND
    Motor.List.WareHouseCV_05.InStopped AND
    Motor.List.WareHouseCV_06.InStopped AND
    Motor.List.WareHouseCV_07.InStopped AND
    Motor.List.WareHouseCV_08.InStopped AND
    Motor.List.WareHouseCV_09.InStopped AND
    Motor.List.WareHouseCV_10.InStopped AND
    Motor.List.WareHouseCV_11.InStopped AND
    Motor.List.WareHouseCV_12.InStopped AND
    Motor.List.WareHouseCV_13.InStopped AND
    Motor.List.WareHouseCV_14.InStopped AND
    Motor.List.WareHouseCV_15.InStopped AND
    Motor.List.WareHouseCV_16.InStopped AND
    Motor.List.WareHouseCV_17.InStopped AND
    Motor.List.WareHouseCV_18.InStopped AND
    Motor.List.WareHouseCV_19.InStopped AND
    Motor.List.WareHouseCV_20.InStopped;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_GetErrorMsg" Id="{4723d39b-372c-4cad-aa44-f1e1f3b7ac52}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD M_GetErrorMsg : T_MaxString
VAR_INPUT
	xErrorID: INT;
END_VAR

VAR
	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE xErrorID OF
    0:
        M_GetErrorMsg := 'No Error';
    1:
        M_GetErrorMsg := 'Action time out';
    2:
        M_GetErrorMsg := 'Cylinder not ready';
    3:
        M_GetErrorMsg := 'Motor not ready';
    4:
		M_GetErrorMsg := 'FanucRobot can not homing';
END_CASE]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_RetractStorageCylinder" Id="{26a6b3cc-b770-4faf-bc62-14bd1722daa9}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD M_RetractStorageCylinder : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Cylinder.List.fbUpCV_FeedInPress1.M_Retract();
Cylinder.List.fbUpCV_FeedInPress2.M_Retract();
Cylinder.List.fbUpCV_DiameterPress.M_Retract();
Cylinder.List.fbUpCV_CamaraPress1.M_Retract();
Cylinder.List.fbUpCV_CamaraPress2.M_Retract();
Cylinder.List.fbUpCV_CamaraPress3.M_Retract();
Cylinder.List.fbUpCV_CamaraPress4.M_Retract();
Cylinder.List.fbUpCV_Block1.M_Retract();
Cylinder.List.fbUpCV_Block2.M_Retract();
Cylinder.List.fbUpCV_Block3.M_Retract();
Cylinder.List.fbUpCV_DiameterHoriz.M_Retract();
Cylinder.List.fbUpCV_DiameterVert.M_Retract();
Cylinder.List.fbUpCV_DiameterClamp.M_Retract();
Cylinder.List.fbStackPush.M_Retract();
Cylinder.List.fbLowCV_Press1.M_Retract();
Cylinder.List.fbLowCV_Press2.M_Retract();
Cylinder.List.fbLowCV_Press3.M_Retract();
Cylinder.List.fbLowCV_Press4.M_Retract();
Cylinder.List.fbLowCV_Block1.M_Retract();
Cylinder.List.fbLowCV_Block2.M_Retract();

M_RetractStorageCylinder := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="M_StopStorageMotor" Id="{715a0821-d0e5-45f9-bb41-d226780b39d0}" FolderPath="Private\">
      <Declaration><![CDATA[METHOD M_StopStorageMotor : BOOL
VAR_INPUT
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Motor.List.LowCV.M_MotorStop();
Motor.List.UpCV.M_MotorStop();
Motor.List.WareHouseCV_01.M_MotorStop();
Motor.List.WareHouseCV_02.M_MotorStop();
Motor.List.WareHouseCV_03.M_MotorStop();
Motor.List.WareHouseCV_04.M_MotorStop();
Motor.List.WareHouseCV_05.M_MotorStop();
Motor.List.WareHouseCV_06.M_MotorStop();
Motor.List.WareHouseCV_07.M_MotorStop();
Motor.List.WareHouseCV_08.M_MotorStop();
Motor.List.WareHouseCV_09.M_MotorStop();
Motor.List.WareHouseCV_10.M_MotorStop();
Motor.List.WareHouseCV_11.M_MotorStop();
Motor.List.WareHouseCV_12.M_MotorStop();
Motor.List.WareHouseCV_13.M_MotorStop();
Motor.List.WareHouseCV_14.M_MotorStop();
Motor.List.WareHouseCV_15.M_MotorStop();
Motor.List.WareHouseCV_16.M_MotorStop();
Motor.List.WareHouseCV_17.M_MotorStop();
Motor.List.WareHouseCV_18.M_MotorStop();
Motor.List.WareHouseCV_19.M_MotorStop();
Motor.List.WareHouseCV_20.M_MotorStop();

M_StopStorageMotor := TRUE;]]></ST>
      </Implementation>
    </Method>
    <Method Name="ResetAction" Id="{41a8a5aa-e870-44cb-98ee-c9bf4d0e891a}" FolderPath="Action\">
      <Declaration><![CDATA[METHOD ResetAction
VAR_OUTPUT
    xComplete : BOOL := TRUE;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[uiStorageHomingStep := 0;
RobotResetCMD := FALSE;
CylinderCheckTon.IN := FALSE;
MotorCheckTon.IN := FALSE;
FanucRobotCheckTon.IN := FALSE;
RackMotorHomeRequest := false;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StartAction" Id="{3256a334-377b-41c1-81b0-1036cc95d21d}" FolderPath="Action\">
      <Declaration><![CDATA[METHOD StartAction
VAR_OUTPUT
    xComplete : BOOL := TRUE;
	iErrorID : INT := 0;
END_VAR

VAR
	uiCylinderIndex :UINT;
	uiMotorIndex : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Homed := FALSE;
RackMotorHomeRequest := false;
ResetRobotDelay.IN := FALSE;
uiStorageHomingStep := 0;


]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_StorageHoming">
      <LineId Id="52" Count="6" />
      <LineId Id="163" Count="0" />
      <LineId Id="59" Count="1" />
      <LineId Id="133" Count="0" />
      <LineId Id="161" Count="1" />
      <LineId Id="158" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="84" Count="1" />
      <LineId Id="109" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.CleanupAction">
      <LineId Id="11" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.CyclicAction">
      <LineId Id="67" Count="0" />
      <LineId Id="9" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="120" Count="0" />
      <LineId Id="140" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="22" Count="1" />
      <LineId Id="26" Count="0" />
      <LineId Id="70" Count="4" />
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="81" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="36" Count="3" />
      <LineId Id="75" Count="4" />
      <LineId Id="40" Count="1" />
      <LineId Id="82" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="42" Count="1" />
      <LineId Id="123" Count="0" />
      <LineId Id="121" Count="1" />
      <LineId Id="44" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="125" Count="1" />
      <LineId Id="106" Count="1" />
      <LineId Id="48" Count="0" />
      <LineId Id="103" Count="0" />
      <LineId Id="143" Count="0" />
      <LineId Id="49" Count="0" />
      <LineId Id="128" Count="1" />
      <LineId Id="119" Count="0" />
      <LineId Id="50" Count="8" />
      <LineId Id="83" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="86" Count="0" />
      <LineId Id="85" Count="0" />
      <LineId Id="87" Count="1" />
      <LineId Id="84" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="68" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.ExitAction">
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.M_CheckStorageCylinderInRear">
      <LineId Id="29" Count="19" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.M_CheckStorageMotorInStop">
      <LineId Id="27" Count="20" />
      <LineId Id="26" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.M_GetErrorMsg">
      <LineId Id="32" Count="9" />
      <LineId Id="47" Count="0" />
      <LineId Id="7" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.M_RetractStorageCylinder">
      <LineId Id="21" Count="20" />
      <LineId Id="5" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.M_StopStorageMotor">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="1" />
      <LineId Id="12" Count="19" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.ResetAction">
      <LineId Id="6" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="FB_StorageHoming.StartAction">
      <LineId Id="15" Count="0" />
      <LineId Id="60" Count="0" />
      <LineId Id="50" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="29" Count="1" />
    </LineIds>
  </POU>
</TcPlcObject>